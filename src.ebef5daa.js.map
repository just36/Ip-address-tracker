{"version":3,"sources":["src/helpers/addTileLayer.js","src/helpers/validateIp.js","src/helpers/getAddress.js","src/helpers/toggleInfo.js","src/helpers/index.js","src/index.js"],"names":["addTileLayer","map","L","tileLayer","maxZoom","attribution","addTo","validateIp","ip","test","alert","getAddress","response","fetch","json","toggleInfo","infoBlock","document","querySelector","classList","toggle","ipInput","btn","infoBtn","ipInfo","locationInfo","timezoneInfo","ispInfo","addEventListener","getData","handleKey","markerIcon","icon","iconUrl","iconSize","mapArea","setView","value","then","setInfo","e","key","data","lat","lng","country","region","timezone","location","innerText","isp","marker"],"mappings":"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","file":"src.ebef5daa.js","sourceRoot":"..","sourcesContent":["import L from 'leaflet';\r\n\r\nexport function addTileLayer(map) {\r\n  L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n    maxZoom: 19,\r\n    attribution:\r\n      'Coded by <a href=\"https://github.com/just36?tab=repositories\">Denis Zhegulsky</a>',\r\n  }).addTo(map);\r\n}\r\n","export function validateIp(ip) {\r\n  if (/^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}$/.test(ip)) {\r\n    return true;\r\n  } else {\r\n    alert('You have to enter a valid IP address');\r\n    return false;\r\n  }\r\n}\r\n","export async function getAddress(ip = '8.8.8.8') {\r\n  const response = await fetch(\r\n    `https://geo.ipify.org/api/v2/country,city?apiKey=at_Bj1RsHENvf6UbyYps20KT7W69QIOQ&ipAddress=${ip}`\r\n  );\r\n  return await response.json();\r\n}\r\n","export function toggleInfo() {\r\n  const infoBlock = document.querySelector('.info');\r\n  this.classList.toggle('info__close_toggle');\r\n  infoBlock.classList.toggle('info_min');\r\n}\r\n","export { addTileLayer } from './addTileLayer';\r\nexport { validateIp } from './validateIp';\r\nexport { getAddress } from './getAddress';\r\nexport { toggleInfo } from './toggleInfo';\r\n","import 'babel-polyfill';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\nimport { validateIp, addTileLayer, getAddress, toggleInfo } from './helpers';\r\nimport icon from '../images/icon-location.svg';\r\n\r\nconst ipInput = document.querySelector('.search-bar__input');\r\nconst btn = document.querySelector('button');\r\n\r\nconst infoBtn = document.querySelector('.info__close');\r\nconst ipInfo = document.querySelector('#ip');\r\nconst locationInfo = document.querySelector('#location');\r\nconst timezoneInfo = document.querySelector('#timezone');\r\nconst ispInfo = document.querySelector('#isp');\r\n\r\nbtn.addEventListener('click', getData);\r\nipInput.addEventListener('keydown', handleKey);\r\ninfoBtn.addEventListener('click', toggleInfo);\r\n\r\nconst markerIcon = L.icon({\r\n  iconUrl: icon,\r\n  iconSize: [30, 40],\r\n});\r\n\r\nconst mapArea = document.querySelector('.map');\r\nconst map = L.map(mapArea).setView([51.7087, 39.1519], 13);\r\n\r\naddTileLayer(map);\r\n\r\nfunction getData() {\r\n  if (validateIp(ipInput.value)) {\r\n    getAddress(ipInput.value).then(setInfo);\r\n  }\r\n}\r\n\r\nfunction handleKey(e) {\r\n  if (e.key === 'Enter') {\r\n    getData();\r\n  }\r\n}\r\n\r\nfunction setInfo(data) {\r\n  const { lat, lng, country, region, timezone } = data.location;\r\n  ipInfo.innerText = data.ip;\r\n  locationInfo.innerText = `${country} ${region}`;\r\n  timezoneInfo.innerText = timezone;\r\n  ispInfo.innerText = data.isp;\r\n\r\n  map.setView([lat, lng]);\r\n  L.marker([lat, lng], { icon: markerIcon }).addTo(map);\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  getAddress('46.72.198.50').then(setInfo);\r\n});\r\n"]}